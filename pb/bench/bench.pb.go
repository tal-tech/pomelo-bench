// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: bench.proto

package bench

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务状态
type Status int32

const (
	Status_Waiting Status = 0
	Status_Doing   Status = 1
	Status_Success Status = 2
	Status_Failed  Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Waiting",
		1: "Doing",
		2: "Success",
		3: "Failed",
	}
	Status_value = map[string]int32{
		"Waiting": 0,
		"Doing":   1,
		"Success": 2,
		"Failed":  3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bench_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_bench_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{0}
}

// 统计信息
type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送量
	SendCount uint64 `protobuf:"varint,1,opt,name=send_count,json=sendCount,proto3" json:"send_count,omitempty"`
	// 自定义发送量
	CustomSendCount uint64 `protobuf:"varint,2,opt,name=custom_send_count,json=customSendCount,proto3" json:"custom_send_count,omitempty"`
	// 接收量
	OnServerReceiveCount uint64 `protobuf:"varint,3,opt,name=on_server_receive_count,json=onServerReceiveCount,proto3" json:"on_server_receive_count,omitempty"`
	OnAddReceiveCount    uint64 `protobuf:"varint,4,opt,name=on_add_receive_count,json=onAddReceiveCount,proto3" json:"on_add_receive_count,omitempty"`
	OnLeaveReceiveCount  uint64 `protobuf:"varint,5,opt,name=on_leave_receive_count,json=onLeaveReceiveCount,proto3" json:"on_leave_receive_count,omitempty"`
	OnChatReceiveCount   uint64 `protobuf:"varint,6,opt,name=on_chat_receive_count,json=onChatReceiveCount,proto3" json:"on_chat_receive_count,omitempty"`
	OnChatDuration       int64  `protobuf:"varint,7,opt,name=on_chat_duration,json=onChatDuration,proto3" json:"on_chat_duration,omitempty"`
	// 总在线人数
	OnlineNum uint64 `protobuf:"varint,8,opt,name=online_num,json=onlineNum,proto3" json:"online_num,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{0}
}

func (x *Statistics) GetSendCount() uint64 {
	if x != nil {
		return x.SendCount
	}
	return 0
}

func (x *Statistics) GetCustomSendCount() uint64 {
	if x != nil {
		return x.CustomSendCount
	}
	return 0
}

func (x *Statistics) GetOnServerReceiveCount() uint64 {
	if x != nil {
		return x.OnServerReceiveCount
	}
	return 0
}

func (x *Statistics) GetOnAddReceiveCount() uint64 {
	if x != nil {
		return x.OnAddReceiveCount
	}
	return 0
}

func (x *Statistics) GetOnLeaveReceiveCount() uint64 {
	if x != nil {
		return x.OnLeaveReceiveCount
	}
	return 0
}

func (x *Statistics) GetOnChatReceiveCount() uint64 {
	if x != nil {
		return x.OnChatReceiveCount
	}
	return 0
}

func (x *Statistics) GetOnChatDuration() int64 {
	if x != nil {
		return x.OnChatDuration
	}
	return 0
}

func (x *Statistics) GetOnlineNum() uint64 {
	if x != nil {
		return x.OnlineNum
	}
	return 0
}

// 指标统计
type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drops     uint64  `protobuf:"varint,1,opt,name=drops,proto3" json:"drops,omitempty"`
	Average   float32 `protobuf:"fixed32,2,opt,name=average,proto3" json:"average,omitempty"`
	Median    float32 `protobuf:"fixed32,3,opt,name=median,proto3" json:"median,omitempty"`
	Top90Th   float32 `protobuf:"fixed32,4,opt,name=top90th,proto3" json:"top90th,omitempty"`
	Top99Th   float32 `protobuf:"fixed32,5,opt,name=top99th,proto3" json:"top99th,omitempty"`
	Top99P9Th float32 `protobuf:"fixed32,6,opt,name=top99p9th,proto3" json:"top99p9th,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{1}
}

func (x *Metrics) GetDrops() uint64 {
	if x != nil {
		return x.Drops
	}
	return 0
}

func (x *Metrics) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *Metrics) GetMedian() float32 {
	if x != nil {
		return x.Median
	}
	return 0
}

func (x *Metrics) GetTop90Th() float32 {
	if x != nil {
		return x.Top90Th
	}
	return 0
}

func (x *Metrics) GetTop99Th() float32 {
	if x != nil {
		return x.Top99Th
	}
	return 0
}

func (x *Metrics) GetTop99P9Th() float32 {
	if x != nil {
		return x.Top99P9Th
	}
	return 0
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid 自增base
	BaseUid uint64 `protobuf:"varint,1,opt,name=base_uid,json=baseUid,proto3" json:"base_uid,omitempty"`
	// 房间连接数
	RoomNumber uint64 `protobuf:"varint,2,opt,name=room_number,json=roomNumber,proto3" json:"room_number,omitempty"`
	// room id 前缀
	RoomIdPre *string `protobuf:"bytes,3,opt,name=room_id_pre,json=roomIdPre,proto3,oneof" json:"room_id_pre,omitempty"`
	// room id 列表
	RoomIds []string `protobuf:"bytes,4,rep,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty"`
	// room id 前缀
	RoomSize uint64 `protobuf:"varint,5,opt,name=room_size,json=roomSize,proto3" json:"room_size,omitempty"`
	// 压测地址
	Address string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	// channel id
	ChannelId uint64 `protobuf:"varint,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// connector 连接超时时间
	Timeout uint64 `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{2}
}

func (x *Plan) GetBaseUid() uint64 {
	if x != nil {
		return x.BaseUid
	}
	return 0
}

func (x *Plan) GetRoomNumber() uint64 {
	if x != nil {
		return x.RoomNumber
	}
	return 0
}

func (x *Plan) GetRoomIdPre() string {
	if x != nil && x.RoomIdPre != nil {
		return *x.RoomIdPre
	}
	return ""
}

func (x *Plan) GetRoomIds() []string {
	if x != nil {
		return x.RoomIds
	}
	return nil
}

func (x *Plan) GetRoomSize() uint64 {
	if x != nil {
		return x.RoomSize
	}
	return 0
}

func (x *Plan) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Plan) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Plan) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// Connector 客户端链接情况
type ConnectorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gate 连接总数
	GateConnector uint64 `protobuf:"varint,1,opt,name=gate_connector,json=gateConnector,proto3" json:"gate_connector,omitempty"`
	// chat 连接总数
	ChatConnector uint64 `protobuf:"varint,2,opt,name=chat_connector,json=chatConnector,proto3" json:"chat_connector,omitempty"`
}

func (x *ConnectorStatus) Reset() {
	*x = ConnectorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorStatus) ProtoMessage() {}

func (x *ConnectorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorStatus.ProtoReflect.Descriptor instead.
func (*ConnectorStatus) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectorStatus) GetGateConnector() uint64 {
	if x != nil {
		return x.GateConnector
	}
	return 0
}

func (x *ConnectorStatus) GetChatConnector() uint64 {
	if x != nil {
		return x.ChatConnector
	}
	return 0
}

// 连接状态
type Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ChannelId int64  `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	RoomId    string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 总统计信息
	Total      *Statistics      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	PomeloGate *PomeloConnector `protobuf:"bytes,5,opt,name=pomelo_gate,json=pomeloGate,proto3" json:"pomelo_gate,omitempty"`
	PomeloChat *PomeloConnector `protobuf:"bytes,6,opt,name=pomelo_chat,json=pomeloChat,proto3" json:"pomelo_chat,omitempty"`
}

func (x *Connector) Reset() {
	*x = Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{4}
}

func (x *Connector) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Connector) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Connector) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *Connector) GetTotal() *Statistics {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *Connector) GetPomeloGate() *PomeloConnector {
	if x != nil {
		return x.PomeloGate
	}
	return nil
}

func (x *Connector) GetPomeloChat() *PomeloConnector {
	if x != nil {
		return x.PomeloChat
	}
	return nil
}

type ConnectorLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Logs  []string `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs,omitempty"`
}

func (x *ConnectorLog) Reset() {
	*x = ConnectorLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorLog) ProtoMessage() {}

func (x *ConnectorLog) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorLog.ProtoReflect.Descriptor instead.
func (*ConnectorLog) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectorLog) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ConnectorLog) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

type PomeloConnector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected bool   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ReqId     uint64 `protobuf:"varint,3,opt,name=reqId,proto3" json:"reqId,omitempty"`
}

func (x *PomeloConnector) Reset() {
	*x = PomeloConnector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PomeloConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PomeloConnector) ProtoMessage() {}

func (x *PomeloConnector) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PomeloConnector.ProtoReflect.Descriptor instead.
func (*PomeloConnector) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{6}
}

func (x *PomeloConnector) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *PomeloConnector) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PomeloConnector) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

// PlanDetail 计划运行详情
type PlanDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划配置
	Plan *Plan `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	// 连接器详情
	Connectors []*Connector `protobuf:"bytes,3,rep,name=connectors,proto3" json:"connectors,omitempty"`
}

func (x *PlanDetail) Reset() {
	*x = PlanDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanDetail) ProtoMessage() {}

func (x *PlanDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanDetail.ProtoReflect.Descriptor instead.
func (*PlanDetail) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{7}
}

func (x *PlanDetail) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *PlanDetail) GetConnectors() []*Connector {
	if x != nil {
		return x.Connectors
	}
	return nil
}

// StartPlan 快速启动压测
type StartPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *StartPlanRequest) Reset() {
	*x = StartPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlanRequest) ProtoMessage() {}

func (x *StartPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlanRequest.ProtoReflect.Descriptor instead.
func (*StartPlanRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{8}
}

func (x *StartPlanRequest) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

// StartPlanResponse 与详情返回一致
type StartPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid
	Uuid   string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Detail *PlanDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	// 计划状态
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=bench.Status" json:"status,omitempty"`
}

func (x *StartPlanResponse) Reset() {
	*x = StartPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlanResponse) ProtoMessage() {}

func (x *StartPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlanResponse.ProtoReflect.Descriptor instead.
func (*StartPlanResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{9}
}

func (x *StartPlanResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StartPlanResponse) GetDetail() *PlanDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *StartPlanResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Waiting
}

// SendChat 快速发送消息
type SendChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid 选填没有代表全部
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// 发送的消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 发送次数
	Number uint64 `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	// 发送人数限制
	Limit uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// 发送间隔 毫秒
	Duration uint64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SendChatRequest) Reset() {
	*x = SendChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatRequest) ProtoMessage() {}

func (x *SendChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatRequest.ProtoReflect.Descriptor instead.
func (*SendChatRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{10}
}

func (x *SendChatRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *SendChatRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendChatRequest) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SendChatRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SendChatRequest) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SendChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendChatResponse) Reset() {
	*x = SendChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatResponse) ProtoMessage() {}

func (x *SendChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatResponse.ProtoReflect.Descriptor instead.
func (*SendChatResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{11}
}

// CustomSend 自定义消息发送
type CustomSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid 选填没有代表全部
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// 自定义消息池 - 不同的client从池中挑选自己的消息
	Pool *CustomMessagePool `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	// 发送次数
	Number uint64 `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	// 发送人数限制
	Limit uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// 发送间隔 毫秒
	Duration uint64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *CustomSendRequest) Reset() {
	*x = CustomSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomSendRequest) ProtoMessage() {}

func (x *CustomSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomSendRequest.ProtoReflect.Descriptor instead.
func (*CustomSendRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{12}
}

func (x *CustomSendRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *CustomSendRequest) GetPool() *CustomMessagePool {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *CustomSendRequest) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CustomSendRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CustomSendRequest) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 自定义消息池
type CustomMessagePool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息对应的路由
	Router string `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	// 发送的消息信息
	Data [][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CustomMessagePool) Reset() {
	*x = CustomMessagePool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMessagePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMessagePool) ProtoMessage() {}

func (x *CustomMessagePool) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMessagePool.ProtoReflect.Descriptor instead.
func (*CustomMessagePool) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{13}
}

func (x *CustomMessagePool) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *CustomMessagePool) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CustomSendResponse) Reset() {
	*x = CustomSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomSendResponse) ProtoMessage() {}

func (x *CustomSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomSendResponse.ProtoReflect.Descriptor instead.
func (*CustomSendResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{14}
}

// ClosePlan 快速清理任务
type ClosePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid 选填没有代表全部
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
}

func (x *ClosePlanRequest) Reset() {
	*x = ClosePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePlanRequest) ProtoMessage() {}

func (x *ClosePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePlanRequest.ProtoReflect.Descriptor instead.
func (*ClosePlanRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{15}
}

func (x *ClosePlanRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

type ClosePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClosePlanResponse) Reset() {
	*x = ClosePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePlanResponse) ProtoMessage() {}

func (x *ClosePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePlanResponse.ProtoReflect.Descriptor instead.
func (*ClosePlanResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{16}
}

// ClearStatistics 清理任务指标
type ClearStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid 选填没有代表全部
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
}

func (x *ClearStatisticsRequest) Reset() {
	*x = ClearStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearStatisticsRequest) ProtoMessage() {}

func (x *ClearStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearStatisticsRequest.ProtoReflect.Descriptor instead.
func (*ClearStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{17}
}

func (x *ClearStatisticsRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

type ClearStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearStatisticsResponse) Reset() {
	*x = ClearStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearStatisticsResponse) ProtoMessage() {}

func (x *ClearStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearStatisticsResponse.ProtoReflect.Descriptor instead.
func (*ClearStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{18}
}

// ListPlan 查询压测计划
type ListPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPlanRequest) Reset() {
	*x = ListPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanRequest) ProtoMessage() {}

func (x *ListPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanRequest.ProtoReflect.Descriptor instead.
func (*ListPlanRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{19}
}

type ListPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*PlanMonitor `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *ListPlanResponse) Reset() {
	*x = ListPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanResponse) ProtoMessage() {}

func (x *ListPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanResponse.ProtoReflect.Descriptor instead.
func (*ListPlanResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{20}
}

func (x *ListPlanResponse) GetPlans() []*PlanMonitor {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PlanMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Plan   *Plan  `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=bench.Status" json:"status,omitempty"`
	// Connector 客户端链接情况
	Connector *ConnectorStatus `protobuf:"bytes,4,opt,name=connector,proto3" json:"connector,omitempty"`
	// 总统计信息
	Total *Statistics `protobuf:"bytes,5,opt,name=total,proto3" json:"total,omitempty"`
	// 指标统计
	Stat *Metrics `protobuf:"bytes,6,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *PlanMonitor) Reset() {
	*x = PlanMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanMonitor) ProtoMessage() {}

func (x *PlanMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanMonitor.ProtoReflect.Descriptor instead.
func (*PlanMonitor) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{21}
}

func (x *PlanMonitor) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PlanMonitor) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *PlanMonitor) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Waiting
}

func (x *PlanMonitor) GetConnector() *ConnectorStatus {
	if x != nil {
		return x.Connector
	}
	return nil
}

func (x *PlanMonitor) GetTotal() *Statistics {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *PlanMonitor) GetStat() *Metrics {
	if x != nil {
		return x.Stat
	}
	return nil
}

// DetailPlan 查询压测计划详情
type DetailPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DetailPlanRequest) Reset() {
	*x = DetailPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPlanRequest) ProtoMessage() {}

func (x *DetailPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPlanRequest.ProtoReflect.Descriptor instead.
func (*DetailPlanRequest) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{22}
}

func (x *DetailPlanRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DetailPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计划uid
	Uuid   string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Detail *PlanDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	// 计划状态
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=bench.Status" json:"status,omitempty"`
}

func (x *DetailPlanResponse) Reset() {
	*x = DetailPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bench_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPlanResponse) ProtoMessage() {}

func (x *DetailPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bench_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPlanResponse.ProtoReflect.Descriptor instead.
func (*DetailPlanResponse) Descriptor() ([]byte, []int) {
	return file_bench_proto_rawDescGZIP(), []int{23}
}

func (x *DetailPlanResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DetailPlanResponse) GetDetail() *PlanDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *DetailPlanResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Waiting
}

var File_bench_proto protoreflect.FileDescriptor

var file_bench_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x22, 0xf0, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6f,
	0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x6f, 0x70, 0x39, 0x30, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x39, 0x30, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x39, 0x39, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x39, 0x39, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x39, 0x39, 0x70, 0x39, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x39, 0x39, 0x70, 0x39, 0x74, 0x68, 0x22, 0x82, 0x02,
	0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x70, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x50, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x70,
	0x72, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x67,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x2e, 0x50, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x70, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x47, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a,
	0x0b, 0x70, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6f, 0x6d, 0x65, 0x6c,
	0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x70, 0x6f, 0x6d, 0x65,
	0x6c, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73,
	0x22, 0x5f, 0x0a, 0x0f, 0x50, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x71, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1f, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x79, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xad, 0x01, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x13, 0x0a,
	0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x0b, 0x50,
	0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12,
	0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x39,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x32, 0xe7, 0x03, 0x0a, 0x05, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x12, 0x40, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x17, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x16, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x18, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x2e, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x17, 0x2e, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x18, 0x2e, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bench_proto_rawDescOnce sync.Once
	file_bench_proto_rawDescData = file_bench_proto_rawDesc
)

func file_bench_proto_rawDescGZIP() []byte {
	file_bench_proto_rawDescOnce.Do(func() {
		file_bench_proto_rawDescData = protoimpl.X.CompressGZIP(file_bench_proto_rawDescData)
	})
	return file_bench_proto_rawDescData
}

var file_bench_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bench_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_bench_proto_goTypes = []interface{}{
	(Status)(0),                     // 0: bench.Status
	(*Statistics)(nil),              // 1: bench.Statistics
	(*Metrics)(nil),                 // 2: bench.Metrics
	(*Plan)(nil),                    // 3: bench.Plan
	(*ConnectorStatus)(nil),         // 4: bench.ConnectorStatus
	(*Connector)(nil),               // 5: bench.Connector
	(*ConnectorLog)(nil),            // 6: bench.ConnectorLog
	(*PomeloConnector)(nil),         // 7: bench.PomeloConnector
	(*PlanDetail)(nil),              // 8: bench.PlanDetail
	(*StartPlanRequest)(nil),        // 9: bench.StartPlanRequest
	(*StartPlanResponse)(nil),       // 10: bench.StartPlanResponse
	(*SendChatRequest)(nil),         // 11: bench.SendChatRequest
	(*SendChatResponse)(nil),        // 12: bench.SendChatResponse
	(*CustomSendRequest)(nil),       // 13: bench.CustomSendRequest
	(*CustomMessagePool)(nil),       // 14: bench.CustomMessagePool
	(*CustomSendResponse)(nil),      // 15: bench.CustomSendResponse
	(*ClosePlanRequest)(nil),        // 16: bench.ClosePlanRequest
	(*ClosePlanResponse)(nil),       // 17: bench.ClosePlanResponse
	(*ClearStatisticsRequest)(nil),  // 18: bench.ClearStatisticsRequest
	(*ClearStatisticsResponse)(nil), // 19: bench.ClearStatisticsResponse
	(*ListPlanRequest)(nil),         // 20: bench.ListPlanRequest
	(*ListPlanResponse)(nil),        // 21: bench.ListPlanResponse
	(*PlanMonitor)(nil),             // 22: bench.PlanMonitor
	(*DetailPlanRequest)(nil),       // 23: bench.DetailPlanRequest
	(*DetailPlanResponse)(nil),      // 24: bench.DetailPlanResponse
}
var file_bench_proto_depIdxs = []int32{
	1,  // 0: bench.Connector.total:type_name -> bench.Statistics
	7,  // 1: bench.Connector.pomelo_gate:type_name -> bench.PomeloConnector
	7,  // 2: bench.Connector.pomelo_chat:type_name -> bench.PomeloConnector
	3,  // 3: bench.PlanDetail.plan:type_name -> bench.Plan
	5,  // 4: bench.PlanDetail.connectors:type_name -> bench.Connector
	3,  // 5: bench.StartPlanRequest.plan:type_name -> bench.Plan
	8,  // 6: bench.StartPlanResponse.detail:type_name -> bench.PlanDetail
	0,  // 7: bench.StartPlanResponse.status:type_name -> bench.Status
	14, // 8: bench.CustomSendRequest.pool:type_name -> bench.CustomMessagePool
	22, // 9: bench.ListPlanResponse.plans:type_name -> bench.PlanMonitor
	3,  // 10: bench.PlanMonitor.plan:type_name -> bench.Plan
	0,  // 11: bench.PlanMonitor.status:type_name -> bench.Status
	4,  // 12: bench.PlanMonitor.connector:type_name -> bench.ConnectorStatus
	1,  // 13: bench.PlanMonitor.total:type_name -> bench.Statistics
	2,  // 14: bench.PlanMonitor.stat:type_name -> bench.Metrics
	8,  // 15: bench.DetailPlanResponse.detail:type_name -> bench.PlanDetail
	0,  // 16: bench.DetailPlanResponse.status:type_name -> bench.Status
	9,  // 17: bench.Bench.StartPlan:input_type -> bench.StartPlanRequest
	11, // 18: bench.Bench.SendChat:input_type -> bench.SendChatRequest
	13, // 19: bench.Bench.CustomSend:input_type -> bench.CustomSendRequest
	18, // 20: bench.Bench.ClearStatistics:input_type -> bench.ClearStatisticsRequest
	16, // 21: bench.Bench.ClosePlan:input_type -> bench.ClosePlanRequest
	20, // 22: bench.Bench.ListPlan:input_type -> bench.ListPlanRequest
	23, // 23: bench.Bench.DetailPlan:input_type -> bench.DetailPlanRequest
	10, // 24: bench.Bench.StartPlan:output_type -> bench.StartPlanResponse
	12, // 25: bench.Bench.SendChat:output_type -> bench.SendChatResponse
	15, // 26: bench.Bench.CustomSend:output_type -> bench.CustomSendResponse
	19, // 27: bench.Bench.ClearStatistics:output_type -> bench.ClearStatisticsResponse
	17, // 28: bench.Bench.ClosePlan:output_type -> bench.ClosePlanResponse
	21, // 29: bench.Bench.ListPlan:output_type -> bench.ListPlanResponse
	24, // 30: bench.Bench.DetailPlan:output_type -> bench.DetailPlanResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_bench_proto_init() }
func file_bench_proto_init() {
	if File_bench_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bench_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PomeloConnector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMessagePool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bench_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bench_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_bench_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_bench_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_bench_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_bench_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bench_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bench_proto_goTypes,
		DependencyIndexes: file_bench_proto_depIdxs,
		EnumInfos:         file_bench_proto_enumTypes,
		MessageInfos:      file_bench_proto_msgTypes,
	}.Build()
	File_bench_proto = out.File
	file_bench_proto_rawDesc = nil
	file_bench_proto_goTypes = nil
	file_bench_proto_depIdxs = nil
}
