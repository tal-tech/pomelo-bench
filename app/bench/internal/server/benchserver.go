// Code generated by goctl. DO NOT EDIT.
// Source: bench.proto

package server

import (
	"context"

	"pomelo_bench/app/bench/internal/logic"
	"pomelo_bench/app/bench/internal/svc"
	"pomelo_bench/pb/bench"
)

type BenchServer struct {
	svcCtx *svc.ServiceContext
	bench.UnimplementedBenchServer
}

func NewBenchServer(svcCtx *svc.ServiceContext) *BenchServer {
	return &BenchServer{
		svcCtx: svcCtx,
	}
}

// StartPlan 启动压测
func (s *BenchServer) StartPlan(ctx context.Context, in *bench.StartPlanRequest) (*bench.StartPlanResponse, error) {
	l := logic.NewStartPlanLogic(ctx, s.svcCtx)
	return l.StartPlan(in)
}

// SendChat 发送消息
func (s *BenchServer) SendChat(ctx context.Context, in *bench.SendChatRequest) (*bench.SendChatResponse, error) {
	l := logic.NewSendChatLogic(ctx, s.svcCtx)
	return l.SendChat(in)
}

// CustomSend 自定义消息发送
func (s *BenchServer) CustomSend(ctx context.Context, in *bench.CustomSendRequest) (*bench.CustomSendResponse, error) {
	l := logic.NewCustomSendLogic(ctx, s.svcCtx)
	return l.CustomSend(in)
}

// ClearStatistics 清理任务指标
func (s *BenchServer) ClearStatistics(ctx context.Context, in *bench.ClearStatisticsRequest) (*bench.ClearStatisticsResponse, error) {
	l := logic.NewClearStatisticsLogic(ctx, s.svcCtx)
	return l.ClearStatistics(in)
}

// ClosePlan 清理任务
func (s *BenchServer) ClosePlan(ctx context.Context, in *bench.ClosePlanRequest) (*bench.ClosePlanResponse, error) {
	l := logic.NewClosePlanLogic(ctx, s.svcCtx)
	return l.ClosePlan(in)
}

// ListPlan 查询压测计划
func (s *BenchServer) ListPlan(ctx context.Context, in *bench.ListPlanRequest) (*bench.ListPlanResponse, error) {
	l := logic.NewListPlanLogic(ctx, s.svcCtx)
	return l.ListPlan(in)
}

// DetailPlan 查询压测计划详情
func (s *BenchServer) DetailPlan(ctx context.Context, in *bench.DetailPlanRequest) (*bench.DetailPlanResponse, error) {
	l := logic.NewDetailPlanLogic(ctx, s.svcCtx)
	return l.DetailPlan(in)
}
